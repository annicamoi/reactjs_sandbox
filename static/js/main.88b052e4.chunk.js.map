{"version":3,"sources":["Components/Circle.js","Components/GameOver.js","assets/sounds/bg.mp3","assets/sounds/gameover.mp3","App.js","index.js"],"names":["Circle","props","className","color","active","onClick","click","style","pointerEvents","disabled","closeHandler","window","location","reload","GameOver","score","endMessage","gameStartSound","Audio","startSound","gameEndSound","endSound","getRndInteger","min","max","Math","floor","random","App","state","current","circles","id","showGameOver","rounds","gameStart","clickedOnce","timer","undefined","pace","clickHandler","console","log","setState","endHandler","nextCircle","nextActive","setTimeout","startHandler","play","pause","endScore","clearTimeout","circlesList","this","map","c","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88b052e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Circle.css\";\r\n\r\nconst Circle = (props) => {\r\n  return (\r\n    <div\r\n      className={`circle ${props.color} ${props.active ? \" active\" : \"\"}`}\r\n      onClick={props.click}\r\n      style={{ pointerEvents: props.disabled ? \"auto\" : \"none\" }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport './GameOver.css';\r\n\r\nconst closeHandler = () => {\r\n    window.location.reload();\r\n};\r\n\r\nconst GameOver = (props) => {\r\n    return (\r\n        <div className=\"overlay\">\r\n            <div className=\"gameover_box\">\r\n                <h2>Game Over</h2>\r\n                <p>Your score was: {props.score} </p>\r\n                <p>{props.endMessage}</p>\r\n                <button onClick={closeHandler}>X</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameOver;","export default __webpack_public_path__ + \"static/media/bg.816ab20c.mp3\";","export default __webpack_public_path__ + \"static/media/gameover.067e16bc.mp3\";","import React, { Component } from \"react\";\nimport Circle from \"./Components/Circle\";\nimport GameOver from \"./Components/GameOver\";\n\nimport \"./App.css\";\n\nimport startSound from \"./assets/sounds/bg.mp3\";\nimport endSound from \"./assets/sounds/gameover.mp3\";\n\nlet gameStartSound = new Audio(startSound);\nlet gameEndSound = new Audio(endSound);\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    circles: [\n      { id: 1, color: \"green\" },\n      { id: 2, color: \"yellow\" },\n      { id: 3, color: \"orange\" },\n      { id: 4, color: \"red\" },\n    ],\n    showGameOver: false,\n    rounds: 0,\n    gameStart: false,\n    clickedOnce: false,\n  };\n\n  timer = undefined;\n  pace = 1500;\n\n  clickHandler = (id) => {\n    console.log(\"wow, you clicked a circle \" + id);\n\n    if (this.state.current !== id) {\n      this.endHandler();\n      return;\n    }\n\n    if (this.state.clickedOnce === false) {\n      this.setState({\n        score: this.state.score + 1,\n        rounds: 0,\n        clickedOnce: true,\n      });\n    } else {\n      return;\n    }\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.endHandler();\n      return;\n    }\n\n    let nextActive = undefined;\n\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      rounds: this.state.rounds + 1,\n      clickedOnce: false,\n    });\n    console.log(this.state.rounds);\n\n    this.pace *= 0.95;\n    this.timer = setTimeout(this.nextCircle, this.pace);\n\n    console.log(\"active circle is \", this.state.current);\n  };\n\n  startHandler = () => {\n    this.nextCircle();\n    this.setState({ gameStart: true });\n    gameStartSound.play();\n  };\n\n  endHandler = () => {\n    gameStartSound.pause();\n    gameEndSound.play();\n    let endScore = undefined;\n\n    if (this.state.score == 0) {\n      endScore = `Your score is ${this.state.score} and you can do way better!`;\n    } else if (this.state.score >= 1 && this.state.score <= 9) {\n      endScore = `Your score is ${this.state.score} and sorry to disappoint you but you suck!`;\n    } else if (this.state.score >= 10 && this.state.score <= 19) {\n      endScore = `Your score is ${this.state.score} and yes, you are the Player of the game!`;\n    } else if (this.state.score >= 20) {\n      endScore = `Your score is ${this.state.score} - congratulations, you probably want to change your last name to Flaming Flayer!`;\n    }\n\n    this.setState({ endMessage: endScore });\n\n    clearTimeout(this.timer);\n    this.setState({ showGameOver: true });\n  };\n\n  render() {\n    const circlesList = this.state.circles.map((c) => {\n      return (\n        <Circle\n          id={c.id}\n          key={c.id}\n          color={c.color}\n          click={() => this.clickHandler(c.id)}\n          active={this.state.current === c.id}\n          disabled={this.state.gameStart}\n        />\n      );\n    });\n    return (\n      <div>\n        <h1>Speedgame</h1>\n        <p>Your score is: {this.state.score}</p>\n        <div className=\"circles\">{circlesList}</div>\n        <button onClick={this.startHandler} disabled={this.state.gameStart}>\n          Start\n        </button>\n        <button onClick={this.endHandler}>Stop</button>\n        {this.state.showGameOver && (\n          <GameOver\n            score={this.state.score}\n            endMessage={this.state.endMessage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}